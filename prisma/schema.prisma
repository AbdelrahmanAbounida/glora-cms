generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}


enum UserRole {
  AGENCY_OWNER
  AGENCY_ADMIN
  SUBACCOUNT_USER
  SUBACCOUNT_GUEST
}


model Account {
  id    String @id @default(uuid()) 
  userId             String 
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.Text
  access_token       String?  @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.Text
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  @@unique([provider, providerAccountId])
}
model User {
  id String @id @default(uuid())
  name    String? 
  email String? @unique
  emailVerified DateTime?
  hashedPassword String?
  image         String?
  role        UserRole @default(SUBACCOUNT_USER)
  accounts      Account[]
  verificationToken AuthToken?    @relation(name: "VerificationToken")
  passwordResetToken  AuthToken?  @relation(name: "PasswordResetToken")
}

model AuthToken {
  id    String @id @default(uuid())
  userId  String @unique
  token String @unique
  expires DateTime
  verifyuser  User @relation(fields: [userId],name: "VerificationToken",references: [id],onDelete: Cascade,map: "authtoken_verifyuser_fk")
  passwordResetuser  User @relation(fields: [userId],name: "PasswordResetToken",references: [id],onDelete: Cascade,map: "authtoken_resetpassworduser_fk")
  
  @@index([userId])
}
